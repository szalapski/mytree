@page "/tree"
@inject HttpClient Http
@using MyTree.Shared.Services

<div>
Tree sandbox
</div>

<div>
    <h3>News from it:</h3>
    <div>@(Content?.TotalResults ?? 0) items</div>
    <div>retrieved: @Content?.Status</div>
    <ul>
    
    @if (Content != null){

        foreach (var sc in ContentTree.SourceCounts){
            <li>@sc.Key - @sc.Value</li>
        }

        foreach (var article in Content.Articles){
            <li>@article.Title</li>
        }
    }
    </ul>
</div>



@functions {
    private MyTree.Shared.Services.NewsService NewsService1 => 
        new MyTree.Shared.Services.NewsService(Http);
    
    // view model
    public NewsApiTopHeadlinesResult Content {get; set;} 
    public Tree ContentTree {get; set;} 

    private async Task GetHeadlines()
    {
        NewsApiTopHeadlinesResult headlines = await NewsService1.GetHeadlines();
        Content = headlines;
        ContentTree = MyTree.Shared.Services.Tree.From(headlines);
    }

    protected override async Task OnInitAsync()
    {
        await GetHeadlines();
    }
}

